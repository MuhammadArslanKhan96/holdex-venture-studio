mixin crumbItemLink(href, name)
  li: a(
    class="text-paragraph-l xs:text-paragraph-s text-t3 transition-colors hover:text-accent1-default"
    href=href
    title=name
  ): span= name

mixin crumbDelimiter
  li(class="crumb-delimiter text-paragraph-l xs:text-paragraph-s text-t3/50") /

mixin crumbItemText(name)
  li: span(class="text-paragraph-l xs:text-paragraph-s text-t3")= name

//- Filter options
mixin filter-options
  ul.filter-options(class="relative flex items-start my-3 border border-solid border-l4 rounded-xl")
    +filter-option-item("{() => handleSort($page.url, 'CREATED_AT')}", "By Time")(
      class!="border-r border-solid border-l4 rounded-l-underbase {pageFilter !== 'NET_UP_VOTES' ? '!bg-l3 !text-accent1-default' : ''}"
    )
    +filter-option-item("{() => handleSort($page.url, 'NET_UP_VOTES')}", "By Rating")(
      class!="rounded-r-underbase {pageFilter === 'NET_UP_VOTES' ? '!bg-l3 !text-accent1-default' : ''}"
    )

mixin filter-option-item(onClick, title)
  li.option-item(
    on:click!=onClick
    class!="flex items-center justify-center cursor-pointer bg-l2 transition-colors text-cta text-t3 hover:text-t1 py-0.75 px-2.75"
  )&attributes(attributes)= title

//- Short links
mixin short-links
  ul.short-links(
    class="flex items-center justify-center gap-x-5 w-full max-w-[604px] smDown:justify-start smDown:flex-wrap"
  )
    block

mixin short-link(href, icon, title)
  a.short-link(
    class="flex items-center gap-2 text-cta text-t1 transition-colors hover:text-accent1-default"
    href=href
  )
    Icon(icon=icon width="{20}" height="{20}" colorInherit)
    span= title

mixin inline-link(href, title)
  a.short-link(
    class="relative underline underline-offset-4 bg-accent1-default/15 text-accent1-default text-paragraph-l transition-colors hover:bg-accent1-default/25 focus:bg-accent1-default/25"
    href=href
  )&attributes(attributes)
    span= title

mixin button-secondary-small(label)
  button(
    type="button"
    class="relative inline-flex z-1 bg-l3 text-t1 text-cta border border-solid border-l3 shadow-secondary-button items-center justify-center p-1.75 px-3.75 rounded-xl transition-all focus:border-accent1-default hover:border-accent1-active hover:shadow-secondary-button-hover"
  )&attributes(attributes)
    span= label

//- Button Icon components
mixin button-icon-small(icon)
  button(
    type="button"
    class="relative inline-flex z-1 bg-l3 text-t1 border border-solid border-l3 shadow-secondary-button items-center justify-center p-1.25 rounded-2lg transition-all focus:border-accent1-default hover:text-t1 hover:border-accent1-active hover:shadow-secondary-button-hover"
  )&attributes(attributes)
    if block
      block
    else
      Icon(icon=icon width="{20}" height="{20}" colorInherit)

mixin messageHeader(title, subtitle)
  h1(class="text-title-l font-satoshi text-center smDown:text-left xs:text-h1-s")&attributes(attributes)= title
  if subtitle
    p(class="text-subtitle-l text-t2 text-center smDown:text-left xs:text-subtitle-s max-w-[604px] w-full")= subtitle

mixin feedRenderer
  +if('isSearchMode')
    +if('totalCount > 0')
      .result-label-wrapper(class="flex items-center flex-wrap gap-3")
        p(class="text-paragraph-l font-bold") #[span(class="text-t3 font-medium") Showing results for] {pageQ || '#' + pageFilter}
        +button-icon-small("{XMark}")(
          on:click!="{() => handleSort($page.url, 'CREATED_AT')}"
        )
      block
      +else
        p(class="text-paragraph-l text-t1 w-full text-center font-bold") #[span(class="text-t3 font-medium") No articles found for] {pageQ || '#' + pageFilter}.
    +else
      block

mixin subscriber-container
  div(class="relative max-w-[604px] w-full xs:px-4 flex")
    div(class="absolute [background:var(--line-gradient)] w-1/3 xs:w-1/2 h-[1px] left-10")
    div(class="absolute bottom-8 h-[1px] [background:var(--line-gradient)] right-10  w-1/3 xs:w-1/2")
    div(
      class="flex flex-col justify-start gap-4 xs:gap-6 w-full bg-l2 border border-solid border-l4 px-2 {isSubscribed ? 'py-4':'py-4 pb-2'} rounded-xl mb-8"
    )
      div(class="flex xs:flex-col gap-8 justify-between xs:items-start items-center px-2")
        div(class="flex xs:flex-col items-center xs:items-start gap-3 xs:gap-4")
          div(class="flex {styles2}")
            +each("avatar_list as src")
              +avatar("{src}","{styles}")
          p(class="text-t3 text-lg text-black xs:pl-0 ")= "{isSubscribed ? 'Subscribed to Holdex Network.' : 'Join 4.543+ founders and industry experts.'}"
        +if("isSubscribed")
          button(
            on:click!="{() => toggle(isSubscribed)}"
            type="button"
            class="relative inline-flex z-1 bg-l3 text-t1 h-full xs:w-full border border-solid border-l4 font-bold xs:-mt-4 shadow-secondary-button items-center justify-center py-1 px-3 rounded-lg hover:border-accent1-active hover:shadow-secondary-button-hover"
          )&attributes(attributes)
            span= "Learn More"

      +if("!isSubscribed")
        div(class="flex flex-row xs:flex-col gap-2 items-start w-full px-2 mb-2 ")
          input(
            type="text"
            placeholder="Add your email to join Holdex network"
            bind:value="{email}"
            class="bg-l2 text-t3 placeholder:text-t3 border-l4 font-medium hover:border-accent1-active hover:shadow-secondary-button-hover shadow-secondary-button border w-full h-12 xs:py-4 px-2 rounded-xl mr-2 xs:mb-0"
          )
          button(
            on:click!="{subscribe}"
            type="button"
            disabled="{!isValidEmail(email)}"
            class="relative disabled:cursor-not-allowed disabled:text-t3 inline-flex z-1 bg-l3 text-t1 h-full xs:w-full border border-solid border-l4 font-bold xs:mt-1 shadow-secondary-button items-center justify-center p-2 px-3.75 rounded-xl hover:border-accent1-active hover:shadow-secondary-button-hover"
          )&attributes(attributes)
            span= "{isSubscribed ? 'Subscribed' : 'Subscribe'}"

mixin avatar(src,style)
  img.relative.block.w-8.h-8.object-center.rounded-xl(alt="avatar" src=src style=style)

mixin toggle-button(label, toggleFunc, classes)
  button(
    on:click!=toggleFunc
    type="button"
    class="relative inline-flex z-1 h-full xs:w-full border text-sm border-solid border-l4 font-bold  xs:ml-0  shadow-secondary-button items-center justify-center p-2.5 px-4 rounded-xl hover:border-accent1-active hover:shadow-secondary-button-hover" + " " + classes
  )&attributes(attributes)
    span= label

mixin modal
  +if("isOpen")
    div(
      class="fixed top-0 left-0 right-0 z-50 w-full p-4 flex justify-center items-center overflow-y-auto md:inset-0 h-full max-h-full"
    )
      div(class="absolute w-full h-full z-20 bg-t1/80 dark:bg-t4/80" style="backdrop-filter: blur(2px)")
      div(
        class="absolute w-full max-w-2xl xs:max-w-[22rem] max-h-full rounded-xl z-50 bg-l2 border border-l4 shadow-modal"
      )
        div(
          use:clickOutside
          on:click_outside!="{() => handleClickOutside()}"
          class=" p-4 rounded-lg shadow dark:bg-gray-700"
        )
          h3(class="text-h4-l font-satoshi xs:text-h4-s font-bold text-gray-900 dark:text-black") Subscribed to Holdex Network
          p(class="text-base leading-relaxed text-t3 mt-3 pb-4") Are you sure you want to unsubscribe?
          div(class="flex items-center pt-4 gap-2 border-t border-l2-200 rounded-b border-l4 xs:flex-col")
            +toggle-button("Unsubscribe", "{() => toggle(!isSubscribed)}", "bg-rating-c py-2 text-t1 dark:text-t4")
            +toggle-button("Close", "{() => toggle(isSubscribed)}", "bg-l3 py-2 text-t1")
